name: Update Index and Sync

permissions:
  contents: write

on:
  push:
    branches: [ main ]
    paths:
      - 'content/**/*.md'
  workflow_dispatch:
    inputs:
      type:
        description: 'Update type (all/posts/tags)'
        required: true
        default: 'all'
      slugs:
        description: 'Comma-separated list of post slugs to update'
        required: false
      tags:
        description: 'Comma-separated list of tags to update'
        required: false

env:
  # 博客配置
  BLOG_URL: ${{ vars.BLOG_URL }}
  BLOG_REVALIDATE_URL: ${{ vars.BLOG_URL }}/api/revalidate
  REVALIDATE_TOKEN: ${{ vars.REVALIDATE_TOKEN }}
  
  # GitHub配置
  GITHUB_REPO: shuakami/blog-content
  GITHUB_BRANCH: main
  
  # 内容配置
  CONTENT_DIR: content
  INDEX_FILE: content/index.json
  
  # 其他配置
  MAX_WORKERS: 4
  PYTHON_VERSION: '3.12'

jobs:
  update-and-sync:
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          cache: 'pip'
      
      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      
      - name: Generate Index
        run: python .github/scripts/generate_index.py
        env:
          CONTENT_DIR: ${{ env.CONTENT_DIR }}
          INDEX_FILE: ${{ env.INDEX_FILE }}
          MAX_WORKERS: ${{ env.MAX_WORKERS }}
        
      - name: Commit Changes
        id: commit
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add ${{ env.INDEX_FILE }}
          if git diff --staged --quiet; then
            echo "changes=false" >> $GITHUB_OUTPUT
          else
            git commit -m "chore: update index.json"
            git push
            echo "changes=true" >> $GITHUB_OUTPUT
          fi

      - name: Get Changed Files
        id: changed
        run: |
          if [[ "${{ github.event_name }}" == "push" ]]; then
            CHANGED_FILES=$(git diff --name-only ${{ github.event.before }} ${{ github.event.after }} | grep "^${{ env.CONTENT_DIR }}/.*\.md$" || true)
            echo "files=${CHANGED_FILES}" >> $GITHUB_OUTPUT
          fi

      - name: Trigger Blog Revalidation
        if: steps.commit.outputs.changes == 'true' || github.event_name == 'workflow_dispatch'
        run: |
          if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            # 处理手动触发
            if [[ "${{ github.event.inputs.type }}" == "posts" && -n "${{ github.event.inputs.slugs }}" ]]; then
              SLUGS="${{ github.event.inputs.slugs }}"
              curl -X POST ${{ env.BLOG_REVALIDATE_URL }} \
                -H "Content-Type: application/json" \
                -H "x-revalidate-token: ${{ env.REVALIDATE_TOKEN }}" \
                -d "{\"type\":\"posts\",\"slugs\":[${SLUGS}]}"
            elif [[ "${{ github.event.inputs.type }}" == "tags" && -n "${{ github.event.inputs.tags }}" ]]; then
              TAGS="${{ github.event.inputs.tags }}"
              curl -X POST ${{ env.BLOG_REVALIDATE_URL }} \
                -H "Content-Type: application/json" \
                -H "x-revalidate-token: ${{ env.REVALIDATE_TOKEN }}" \
                -d "{\"type\":\"tags\",\"tags\":[${TAGS}]}"
            else
              curl -X POST ${{ env.BLOG_REVALIDATE_URL }} \
                -H "Content-Type: application/json" \
                -H "x-revalidate-token: ${{ env.REVALIDATE_TOKEN }}" \
                -d "{\"type\":\"all\"}"
            fi
          else
            # 处理文件变更
            CHANGED_FILES="${{ steps.changed.outputs.files }}"
            if [[ -n "$CHANGED_FILES" ]]; then
              SLUGS=$(echo "$CHANGED_FILES" | sed -n "s/^${{ env.CONTENT_DIR }}\/\(.*\)\.md$/\"\1\"/p" | paste -sd,)
              curl -X POST ${{ env.BLOG_REVALIDATE_URL }} \
                -H "Content-Type: application/json" \
                -H "x-revalidate-token: ${{ env.REVALIDATE_TOKEN }}" \
                -d "{\"type\":\"posts\",\"slugs\":[${SLUGS}]}"
            fi
          fi
